// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: tv_service/epg.proto

package tv_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EpgRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Text      *string `protobuf:"bytes,2,req,name=text" json:"text,omitempty"`
	TimeStart *int64  `protobuf:"varint,3,req,name=time_start,json=timeStart" json:"time_start,omitempty"`
	TimeStop  *int64  `protobuf:"varint,4,req,name=time_stop,json=timeStop" json:"time_stop,omitempty"`
}

func (x *EpgRecord) Reset() {
	*x = EpgRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tv_service_epg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpgRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpgRecord) ProtoMessage() {}

func (x *EpgRecord) ProtoReflect() protoreflect.Message {
	mi := &file_tv_service_epg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpgRecord.ProtoReflect.Descriptor instead.
func (*EpgRecord) Descriptor() ([]byte, []int) {
	return file_tv_service_epg_proto_rawDescGZIP(), []int{0}
}

func (x *EpgRecord) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *EpgRecord) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *EpgRecord) GetTimeStart() int64 {
	if x != nil && x.TimeStart != nil {
		return *x.TimeStart
	}
	return 0
}

func (x *EpgRecord) GetTimeStop() int64 {
	if x != nil && x.TimeStop != nil {
		return *x.TimeStop
	}
	return 0
}

type GetEpgRecordPreviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId *int32 `protobuf:"varint,1,req,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	EpgId     *int32 `protobuf:"varint,2,req,name=epg_id,json=epgId" json:"epg_id,omitempty"`
	TimeStamp *int64 `protobuf:"varint,3,req,name=time_stamp,json=timeStamp" json:"time_stamp,omitempty"`
}

func (x *GetEpgRecordPreviewRequest) Reset() {
	*x = GetEpgRecordPreviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tv_service_epg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEpgRecordPreviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEpgRecordPreviewRequest) ProtoMessage() {}

func (x *GetEpgRecordPreviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tv_service_epg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEpgRecordPreviewRequest.ProtoReflect.Descriptor instead.
func (*GetEpgRecordPreviewRequest) Descriptor() ([]byte, []int) {
	return file_tv_service_epg_proto_rawDescGZIP(), []int{1}
}

func (x *GetEpgRecordPreviewRequest) GetChannelId() int32 {
	if x != nil && x.ChannelId != nil {
		return *x.ChannelId
	}
	return 0
}

func (x *GetEpgRecordPreviewRequest) GetEpgId() int32 {
	if x != nil && x.EpgId != nil {
		return *x.EpgId
	}
	return 0
}

func (x *GetEpgRecordPreviewRequest) GetTimeStamp() int64 {
	if x != nil && x.TimeStamp != nil {
		return *x.TimeStamp
	}
	return 0
}

type GetEpgRecordPreviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreviewUrl *string `protobuf:"bytes,1,opt,name=preview_url,json=previewUrl" json:"preview_url,omitempty"`
}

func (x *GetEpgRecordPreviewResponse) Reset() {
	*x = GetEpgRecordPreviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tv_service_epg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEpgRecordPreviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEpgRecordPreviewResponse) ProtoMessage() {}

func (x *GetEpgRecordPreviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tv_service_epg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEpgRecordPreviewResponse.ProtoReflect.Descriptor instead.
func (*GetEpgRecordPreviewResponse) Descriptor() ([]byte, []int) {
	return file_tv_service_epg_proto_rawDescGZIP(), []int{2}
}

func (x *GetEpgRecordPreviewResponse) GetPreviewUrl() string {
	if x != nil && x.PreviewUrl != nil {
		return *x.PreviewUrl
	}
	return ""
}

type EpgRecordPreviewDecodedLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link      *string `protobuf:"bytes,1,req,name=link" json:"link,omitempty"`
	TimeStart *uint64 `protobuf:"varint,2,req,name=time_start,json=timeStart" json:"time_start,omitempty"`
	TimeStop  *uint64 `protobuf:"varint,3,req,name=time_stop,json=timeStop" json:"time_stop,omitempty"`
	TimeStamp *int64  `protobuf:"varint,4,req,name=time_stamp,json=timeStamp" json:"time_stamp,omitempty"`
}

func (x *EpgRecordPreviewDecodedLink) Reset() {
	*x = EpgRecordPreviewDecodedLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tv_service_epg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpgRecordPreviewDecodedLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpgRecordPreviewDecodedLink) ProtoMessage() {}

func (x *EpgRecordPreviewDecodedLink) ProtoReflect() protoreflect.Message {
	mi := &file_tv_service_epg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpgRecordPreviewDecodedLink.ProtoReflect.Descriptor instead.
func (*EpgRecordPreviewDecodedLink) Descriptor() ([]byte, []int) {
	return file_tv_service_epg_proto_rawDescGZIP(), []int{3}
}

func (x *EpgRecordPreviewDecodedLink) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

func (x *EpgRecordPreviewDecodedLink) GetTimeStart() uint64 {
	if x != nil && x.TimeStart != nil {
		return *x.TimeStart
	}
	return 0
}

func (x *EpgRecordPreviewDecodedLink) GetTimeStop() uint64 {
	if x != nil && x.TimeStop != nil {
		return *x.TimeStop
	}
	return 0
}

func (x *EpgRecordPreviewDecodedLink) GetTimeStamp() int64 {
	if x != nil && x.TimeStamp != nil {
		return *x.TimeStamp
	}
	return 0
}

var File_tv_service_epg_proto protoreflect.FileDescriptor

var file_tv_service_epg_proto_rawDesc = []byte{
	0x0a, 0x14, 0x74, 0x76, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x65, 0x70, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x74, 0x76, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x22, 0x6b, 0x0a, 0x09, 0x45, 0x70, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x22,
	0x71, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x45, 0x70, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x65, 0x70, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x65, 0x70,
	0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x3e, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x45, 0x70, 0x67, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55,
	0x72, 0x6c, 0x22, 0x8c, 0x01, 0x0a, 0x1b, 0x45, 0x70, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x6f, 0x70, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x6f, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x73, 0x77, 0x65, 0x65,
	0x74, 0x2e, 0x74, 0x76, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x76, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65,
}

var (
	file_tv_service_epg_proto_rawDescOnce sync.Once
	file_tv_service_epg_proto_rawDescData = file_tv_service_epg_proto_rawDesc
)

func file_tv_service_epg_proto_rawDescGZIP() []byte {
	file_tv_service_epg_proto_rawDescOnce.Do(func() {
		file_tv_service_epg_proto_rawDescData = protoimpl.X.CompressGZIP(file_tv_service_epg_proto_rawDescData)
	})
	return file_tv_service_epg_proto_rawDescData
}

var file_tv_service_epg_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_tv_service_epg_proto_goTypes = []interface{}{
	(*EpgRecord)(nil),                   // 0: tv_service.EpgRecord
	(*GetEpgRecordPreviewRequest)(nil),  // 1: tv_service.GetEpgRecordPreviewRequest
	(*GetEpgRecordPreviewResponse)(nil), // 2: tv_service.GetEpgRecordPreviewResponse
	(*EpgRecordPreviewDecodedLink)(nil), // 3: tv_service.EpgRecordPreviewDecodedLink
}
var file_tv_service_epg_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tv_service_epg_proto_init() }
func file_tv_service_epg_proto_init() {
	if File_tv_service_epg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tv_service_epg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpgRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tv_service_epg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEpgRecordPreviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tv_service_epg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEpgRecordPreviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tv_service_epg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpgRecordPreviewDecodedLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tv_service_epg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tv_service_epg_proto_goTypes,
		DependencyIndexes: file_tv_service_epg_proto_depIdxs,
		MessageInfos:      file_tv_service_epg_proto_msgTypes,
	}.Build()
	File_tv_service_epg_proto = out.File
	file_tv_service_epg_proto_rawDesc = nil
	file_tv_service_epg_proto_goTypes = nil
	file_tv_service_epg_proto_depIdxs = nil
}
